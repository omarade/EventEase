{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS7036",
          "level": "error",
          "message": "There is no argument given that corresponds to the required parameter 'pageSize' of 'ClientRepo.GetAllClients(int, int)'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Data/ClientRepoTests.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 37,
                  "endLine": 41,
                  "endColumn": 50
                }
              }
            }
          ]
        },
        {
          "ruleId": "CS1061",
          "level": "error",
          "message": "'Task<IEnumerable<Client>>' does not contain a definition for 'Count' and no accessible extension method 'Count' accepting a first argument of type 'Task<IEnumerable<Client>>' could be found (are you missing a using directive or an assembly reference?)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Data/ClientRepoTests.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 60,
                  "endLine": 45,
                  "endColumn": 65
                }
              }
            }
          ]
        },
        {
          "ruleId": "CS1503",
          "level": "error",
          "message": "Argument 2: cannot convert from 'System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<UserService.Models.Client>>' to 'System.Collections.Generic.IEnumerable<UserService.Models.Client>'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Data/ClientRepoTests.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 45,
                  "endLine": 46,
                  "endColumn": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "CS1061",
          "level": "error",
          "message": "'Task<IEnumerable<Client>>' does not contain a definition for 'First' and no accessible extension method 'First' accepting a first argument of type 'Task<IEnumerable<Client>>' could be found (are you missing a using directive or an assembly reference?)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Data/ClientRepoTests.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 46,
                  "endLine": 47,
                  "endColumn": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "CS1503",
          "level": "error",
          "message": "Argument 1: cannot convert from 'UserService.Models.Client' to 'string?'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Data/ClientRepoTests.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 36,
                  "endLine": 71,
                  "endColumn": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "CS1503",
          "level": "error",
          "message": "Argument 2: cannot convert from 'System.Threading.Tasks.Task<UserService.Models.Client>' to 'string?'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Data/ClientRepoTests.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 53,
                  "endLine": 71,
                  "endColumn": 59
                }
              }
            }
          ]
        },
        {
          "ruleId": "CS7036",
          "level": "error",
          "message": "There is no argument given that corresponds to the required parameter 'pageSize' of 'IClientRepo.GetAllClients(int, int)'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Controllers/ClientsControllerTests.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 40,
                  "endLine": 34,
                  "endColumn": 53
                }
              }
            }
          ]
        },
        {
          "ruleId": "CS0039",
          "level": "error",
          "message": "Cannot convert type 'Microsoft.AspNetCore.Mvc.ActionResult<System.Collections.Generic.IEnumerable<UserService.Models.Dtos.ClientReadDto>>' to 'Microsoft.AspNetCore.Mvc.OkObjectResult' via a reference conversion, boxing conversion, unboxing conversion, wrapping conversion, or null type conversion",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Controllers/ClientsControllerTests.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 26,
                  "endLine": 43,
                  "endColumn": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'int Enumerable.Count<ClientReadDto>(IEnumerable<ClientReadDto> source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Controllers/ClientsControllerTests.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 43,
                  "endLine": 47,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'actual' in 'void Assert.Equal<ClientReadDto>(IEnumerable<ClientReadDto> expected, IEnumerable<ClientReadDto> actual)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Controllers/ClientsControllerTests.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 53,
                  "endLine": 48,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change ClientRepoTests.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Data/ClientRepoTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 21,
                  "endLine": 20,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Work/Repos/EventEase/UserService.UnitTests/Data/ClientRepoTests.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 36,
                  "endLine": 45,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        }
      ],
      "rules": {
        "CA1816": {
          "id": "CA1816",
          "shortDescription": "Dispose methods should call SuppressFinalize",
          "fullDescription": "A method that is an implementation of Dispose does not call GC.SuppressFinalize; or a method that is not an implementation of Dispose calls GC.SuppressFinalize; or a method calls GC.SuppressFinalize and passes something other than this (Me in Visual Basic).",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1816",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1829": {
          "id": "CA1829",
          "shortDescription": "Use Length/Count property instead of Count() when available",
          "fullDescription": "Enumerable.Count() potentially enumerates the sequence while a Length/Count property is a direct access.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1829",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0039": {
          "id": "CS0039",
          "defaultLevel": "error",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0039)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry",
              "NotConfigurable"
            ]
          }
        },
        "CS1061": {
          "id": "CS1061",
          "defaultLevel": "error",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1061)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry",
              "NotConfigurable"
            ]
          }
        },
        "CS1503": {
          "id": "CS1503",
          "defaultLevel": "error",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1503)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry",
              "NotConfigurable"
            ]
          }
        },
        "CS7036": {
          "id": "CS7036",
          "defaultLevel": "error",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS7036)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry",
              "NotConfigurable"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        }
      }
    }
  ]
}